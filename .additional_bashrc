# --------------------------------
# User specific shell variables
# --------------------------------
# export PS1='[\u@\h \w]\$ '

# Emacs
export ALTERNATE_EDITOR=""
# export EDITOR='emacsclient -t'
# export VISUAL='emacsclient -c -a emacs'

# Starship
eval "$(starship init bash)"
export STARSHIP_CONFIG=$HOME/.starship.toml

# kubectl
export KUBE_EDITOR='emacs -nw'

# tfenv
# if [ -d "$HOME/.tfenv" ]; then
#  export PATH="$PATH:$HOME/.tfenv/bin"
# fi

# Golang
# if /usr/local/go/bin/go version >/dev/null; then
#   export PATH="$PATH:/usr/local/go/bin"
#   if ! [[ -d "$HOME/.go" ]]; then
#     mkdir "$HOME"/.go
#   fi
#   export GOPATH="$HOME"/.go
#   export GOBIN="$GOPATH"/bin
#   export PATH="${PATH}:${GOBIN}"
# fi

# Poetry
# export PATH="$PATH:$HOME/.poetry/bin"

# NVM
# shellcheck disable=1090
if [[ -d "$HOME/.nvm" ]]; then
  export NVM_DIR="$HOME/.nvm" && \
  [[ -s "$NVM_DIR/nvm.sh" ]] && . "$NVM_DIR/nvm.sh"
  [[ -s "$NVM_DIR/bash_completion" ]] && . "$NVM_DIR/bash_completion"
fi

# Rust
if [[ -d "$HOME"/.cargo ]]; then
  . "$HOME/.cargo/env"
fi

# miniconda3
__conda_setup="$('/home/hiro/.miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/hiro/.miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/hiro/.miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/hiro/.miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup

